%% Part D: MATLAB SDK EMG Analysis
%% Initial data analysis
load('ServoArduinoData.mat');
raw = BioRadioData{1,1}{1,1};

Fs = 2000;

% SNR plot with annotations for DC, fundamental frequency, and harmonics
snr(raw, Fs);

% Noise power
[SNR, npow] = snr(raw, Fs);
sprintf('SNR of the raw signal is %2.2f .', SNR)
sprintf('Noise power of the raw signal is %2.2f dB.', npow)
%% FFT and Filtering

figure(1)
rawFFT = fft(raw);
freqAxisR = (0:length(raw)-1)*2000/length(raw);
plot(freqAxisR, real(rawFFT));
title('Real Component of the FFT of the Raw EMG Data');
xlabel('Frequency (Hz)');
ylabel('Amplitude of the Real Component');

%BUTTERWORTH4TH Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.8 and Signal Processing Toolbox 8.4.
% Generated on: 29-Jan-2022 19:05:30

% Butterworth Bandpass filter designed using FDESIGN.BANDPASS.

% All frequency values are in Hz.
Fs = 2000;  % Sampling Frequency

N   = 4;    % Order
Fc1 = 50;  % First Cutoff Frequency
Fc2 = 140;    % Second Cutoff Frequency

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.bandpass('N,F3dB1,F3dB2', N, Fc1, Fc2, Fs);
Hd = design(h, 'butter');

butt = filter(Hd, raw);

% Time axis
timeAxis = (0:length(butt)-1)*30/length(butt);

% DC removal and full wave rectification
DCremoved = butt - mean(butt);

% Full wave rectification
rectify = abs(DCremoved);

% RMS envelope
win = 50;                                            
rmsv = sqrt(movmean(rectify.^2, win));  

figure(2)
plot(timeAxis, rectify)
title('RMS Envelope of Filtered and Rectified Signal');
xlabel('Time (s)');
ylabel('Amplitude');
hold on
plot(timeAxis, rmsv, '-r', 'LineWidth',1.5)
hold off
grid
legend('EMG',sprintf('RMS (Window Length = %d)',win), 'Location','best')

% Comparison between processed and pre-Processed ata
figure(3)
tiledlayout(2,1);

nexttile;
timeAxis = (0:length(rectify)-1)*30/length(rectify);
plot(timeAxis, rectify)
title('Rectified Data Filtered with 4th Order Butterworth Bandpass Filter');
xlabel('Time (s)');
ylabel('Amplitude of Signal');

nexttile;
plot(timeAxis, raw)
title('Raw Data Pre-Processing');
xlabel('Time (s)');
ylabel('Amplitude of Signal');
